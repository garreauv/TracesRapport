	ADDSP #6
	TSTO #7
	BOV stack_overflow_error
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Code de la table des méthodes de A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.getX, R0
	STORE R0, 5(GB)
; Start main program
; Variables declarations:
	LOAD #null, R0
	STORE R0, 6(GB)
; Beginning of main instructions:
; Appel de méthode :
	ADDSP #1
	LOAD 6(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ NullDeferenceError
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #0
	LOAD R0, R2
	HALT
; End main program
code.Object.equals:
	LOAD -2(LB), R0
	CMP -3(LB), R0
	SEQ R0
	RTS
init.A:
; Initialisation de A.x
	LOAD #0, R0
	LOAD -2(LB), R1
	STORE R0, 1(R1)
	TSTO #0
; Initialisation explicite de A.x
	RTS
code.A.getX:
; Sauvegarde des registres : 
	TSTO #0
	BOV stack_overflow_error
	LOAD -2(LB), R1
	LOAD 1(R1), R2
	LOAD R2, R0
	BRA fin.A.getX
fin.A.getX:
; Restauration des registres : 
	RTS
NullDeferenceError:
	WSTR "Error: deferencement null"
	WNL
	ERROR
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
