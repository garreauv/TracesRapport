	ADDSP #7
	TSTO #8
	BOV stack_overflow_error
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Code de la table des méthodes de Facto
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.Facto.fact, R0
	STORE R0, 5(GB)
; Start main program
; Variables declarations:
	NEW #1, R2
	LEA 3(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.Facto
	POP R2
	STORE R2, 6(GB)
; Appel de méthode :
	ADDSP #2
	LOAD 6(GB), R2
	STORE R2, 0(SP)
	LOAD #5, R2
	STORE R2, -1(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ NullDeferenceError
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #1
	LOAD R0, R2
	STORE R2, 8(GB)
; Beginning of main instructions:
	LOAD 8(GB), R1
	WINT
	HALT
; End main program
code.Object.equals:
	LOAD -2(LB), R0
	CMP -3(LB), R0
	SEQ R0
	RTS
init.Facto:
	TSTO #0
	RTS
code.Facto.fact:
; Sauvegarde des registres : 
	TSTO #4
	BOV stack_overflow_error
	PUSH R4
	PUSH R3
	PUSH R2
	LOAD -3(LB), R2
	LOAD #0, R3
	CMP R3, R2
	BNE E_Sinon.11
	LOAD #0, R2
	LOAD R2, R0
	BRA fin.Facto.fact
	BRA E_Fin.1
E_Sinon.11:
E_Fin.1:
	LOAD -3(LB), R2
; Appel de méthode :
	ADDSP #2
	LOAD -2(LB), R3
	STORE R3, 0(SP)
	LOAD -3(LB), R3
	LOAD #1, R4
	SUB R4, R3
	STORE R3, -1(SP)
	LOAD 0(SP), R3
	CMP #null, R3
	BEQ NullDeferenceError
	LOAD 0(R3), R3
	BSR 2(R3)
	SUBSP #1
	LOAD R0, R3
	MUL R4, R2
	LOAD R2, R0
	BRA fin.Facto.fact
fin.Facto.fact:
; Restauration des registres : 
	POP R2
	POP R3
	POP R4
	RTS
NullDeferenceError:
	WSTR "Error: deferencement null"
	WNL
	ERROR
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
