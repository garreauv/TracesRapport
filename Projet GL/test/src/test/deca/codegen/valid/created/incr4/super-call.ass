	ADDSP #9
	TSTO #10
	BOV stack_overflow_error
; Code de la table des méthodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Code de la table des méthodes de A
	LEA 1(GB), R0
	STORE R0, 3(GB)
	LOAD code.Object.equals, R0
	STORE R0, 4(GB)
	LOAD code.A.ok, R0
	STORE R0, 5(GB)
; Code de la table des méthodes de B
	LEA 3(GB), R0
	STORE R0, 6(GB)
	LOAD code.Object.equals, R0
	STORE R0, 7(GB)
	LOAD code.A.ok, R0
	STORE R0, 8(GB)
; Start main program
; Variables declarations:
	NEW #1, R2
	LEA 6(GB), R0
	STORE R0, 0(R2)
	PUSH R2
	BSR init.B
	POP R2
	STORE R2, 9(GB)
; Beginning of main instructions:
; Appel de méthode :
	ADDSP #1
	LOAD 9(GB), R2
	STORE R2, 0(SP)
	LOAD 0(SP), R2
	CMP #null, R2
	BEQ NullDeferenceError
	LOAD 0(R2), R2
	BSR 2(R2)
	SUBSP #0
	LOAD R0, R2
	WNL
	HALT
; End main program
code.Object.equals:
	LOAD -2(LB), R0
	CMP -3(LB), R0
	SEQ R0
	RTS
init.A:
	TSTO #0
	RTS
init.B:
; Appel de l'initialisation des champs hérités de A
	PUSH R1
	BSR init.A
	SUBSP #1
	TSTO #0
	RTS
code.A.ok:
; Sauvegarde des registres : 
	TSTO #0
	BOV stack_overflow_error
	WSTR "ok"
fin.A.ok:
; Restauration des registres : 
	RTS
NullDeferenceError:
	WSTR "Error: deferencement null"
	WNL
	ERROR
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
