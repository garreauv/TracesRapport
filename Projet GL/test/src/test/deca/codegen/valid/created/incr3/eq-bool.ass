	ADDSP #5
	TSTO #5
	BOV stack_overflow_error
; Code de la table des m√©thodes de Object
	LOAD #null, R0
	STORE R0, 1(GB)
	LOAD code.Object.equals, R0
	STORE R0, 2(GB)
; Start main program
; Variables declarations:
	LOAD #1, R2
	STORE R2, 3(GB)
	LOAD #0, R2
	STORE R2, 4(GB)
	LOAD 3(GB), R2
	LOAD 4(GB), R3
	LOAD #0, R4
	CMP R3, R2
	BNE Assign1
	LOAD #1, R4
Assign1:
	STORE R4, 5(GB)
; Beginning of main instructions:
	LOAD 5(GB), R2
	CMP #0, R2
	BEQ E_Sinon.12
	WSTR "Erreur"
	BRA E_Fin.1
E_Sinon.12:
E_Fin.1:
	LOAD 4(GB), R2
	LOAD 5(GB), R3
	CMP R3, R2
	BNE E_Sinon.23
	WSTR "ok"
	BRA E_Fin.2
E_Sinon.23:
E_Fin.2:
	LOAD 3(GB), R2
	LOAD 5(GB), R3
	CMP R3, R2
	BNE E_Sinon.34
	WSTR "ok"
	BRA E_Fin.3
E_Sinon.34:
E_Fin.3:
	LOAD 3(GB), R2
	LOAD #1, R3
	CMP R3, R2
	BNE E_Sinon.45
	WSTR "ok"
	BRA E_Fin.4
E_Sinon.45:
E_Fin.4:
	LOAD 3(GB), R2
	LOAD #0, R3
	CMP R3, R2
	BNE E_Sinon.56
	WSTR "Erreur"
	BRA E_Fin.5
E_Sinon.56:
E_Fin.5:
	LOAD #1, R2
	LOAD 4(GB), R3
	CMP R3, R2
	BNE E_Sinon.67
	WSTR "Erreur"
	BRA E_Fin.6
E_Sinon.67:
E_Fin.6:
	LOAD #0, R2
	LOAD 4(GB), R3
	CMP R3, R2
	BNE E_Sinon.78
	WSTR "ok"
	BRA E_Fin.7
E_Sinon.78:
E_Fin.7:
	LOAD #1, R2
	LOAD #0, R3
	CMP R3, R2
	BNE E_Sinon.89
	WSTR "Erreur"
	BRA E_Fin.8
E_Sinon.89:
E_Fin.8:
	LOAD #1, R2
	LOAD #1, R3
	CMP R3, R2
	BNE E_Sinon.910
	WSTR "ok"
	BRA E_Fin.9
E_Sinon.910:
E_Fin.9:
	LOAD #0, R2
	LOAD #0, R3
	CMP R3, R2
	BNE E_Sinon.1011
	WSTR "ok"
	WNL
	BRA E_Fin.10
E_Sinon.1011:
E_Fin.10:
	HALT
; End main program
code.Object.equals:
	LOAD -2(LB), R0
	CMP -3(LB), R0
	SEQ R0
	RTS
stack_overflow_error:
	WSTR "Error: Stack Overflow"
	WNL
	ERROR
